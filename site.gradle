/*
 * Checkstyle-Addons - Additional Checkstyle checks
 * Copyright (C) 2015 Thomas Jensen, All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License, version 3, as published by the Free
 * Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this
 * program.  If not, see <http://www.gnu.org/licenses/>.
 */

import com.thomasjensen.checkstyle.addons.build.tasks.SiteTask;
import org.apache.tools.ant.filters.ReplaceTokens;


task siteCopyJavadoc(type: Copy, dependsOn: javadoc) {
    description = project.ext.longName + ': Copy Javadoc to site directory';

    destinationDir = new File(project.buildDir, 'site');
    into("v${project.version}/apidocs") {
        from fileTree(dir: javadoc.destinationDir);
        filter { String line ->
            line.contains("${project.ext.website}latest/checks/") ? line.replace("${project.ext.website}latest/checks/",
                "${project.ext.website}v${project.version}/checks/") : line;
        }
    }
    into("v${project.version}/apidocs/resources") {
        from fileTree(dir: new File(javadoc.destinationDir, 'resources'));
    }
    into('latest/apidocs') {
        from fileTree(dir: javadoc.destinationDir);
    }
}


task siteCopyAllChecks(type: Copy) {
    description = project.ext.longName + ': Copy list of all checks to site directory';

    destinationDir = new File(project.buildDir, 'site');
    final File originalFile = new File(sourceSets.main.resources.srcDirs.iterator().next(),
        '/' + project.ext.checksPackage + '/all_checks.html');
    into("v${project.version}/checks") {
        from originalFile;
        rename { String fileName -> fileName.replace(originalFile.name, 'index.html'); }
        filter(ReplaceTokens, tokens: [version: "v${project.version}".toString()]);
    }
    into('latest/checks') {
        from originalFile;
        rename { String fileName -> fileName.replace(originalFile.name, 'index.html'); }
        filter(ReplaceTokens, tokens: [version: "v${project.version}".toString()]);
    }
}


task siteCopyDownloadGuide(type: Copy) {
    description = project.ext.longName + ': Copy download guide frontmatter stub to site directory';

    destinationDir = new File(project.buildDir, 'site');
    final File originalFile = new File(sourceSets.main.resources.srcDirs.iterator().next(), '/download-guide.html');
    into("v${project.version}") {
        from originalFile;
        filter(ReplaceTokens, tokens: [version: project.version]);
    }
    into('latest') {
        from originalFile;
        filter(ReplaceTokens, tokens: [version: project.version]);
    }
}

task site (type: SiteTask);
